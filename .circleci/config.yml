version: 2
jobs:
  web:
    docker:
      # specify the version you desire here
      - image: cypress/base:10
        environment:
          ## this enables colors in the output
          TERM: xterm

    working_directory: ~/repo/web

    steps:
      - checkout:
          path: ~/repo
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2.1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v2.1-dependencies-

      - run: yarn install --frozen-lockfile

      - save_cache:
          key: v2.1-dependencies-{{ checksum "package.json" }}
          paths:
            - ~/.npm
            - ~/.cache
            - /home/circleci/.cache

      # run tests!
      - run: yarn a11y:test
      - run: yarn test:full
      - run: yarn lint
      - run: yarn extract && yarn compile --strict
      - run: yarn ci:prod

  deploy_container:
    docker:
      - image: docker:17.12.1-ce-git
    working_directory: ~/repo
    steps:
      - checkout:
          path: ~/repo
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py2-pip
            pip install awscli
      - run:
          name: Generate VERSION file
          command: |
            git rev-parse --short HEAD > ~/repo/web/VERSION
      - run:
          name: Build Docker image
          command: |
            docker build -t ircc-rescheduler --build-arg PAPER_FILE_NUMBER_PATTERN="${PAPER_FILE_NUMBER_PATTERN}" .
      - deploy:
          name: Push Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "generate_version_file_for_containers" ]; then
              # Login to AWS
              aws configure set region $AWS_REGION
              $(aws ecr get-login --no-include-email --region $AWS_REGION)

              # Tag and push docker image
              docker tag $DOCKER_IMAGE:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE:latest
              docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE:latest

              aws ecs update-service --cluster $AWS_CLUSTER_NAME --service $AWS_ECS_SERVICE_NAME --force-new-deployment
            fi

  upload_sourcemaps:
    docker:
      # specify the version you desire here
      - image: cypress/base:10
        environment:
          ## this enables colors in the output
          TERM: xterm

    working_directory: ~/repo/web

    steps:
      - checkout:
          path: ~/repo
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2.1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v2.1-dependencies-

      - run: yarn install --frozen-lockfile

      - save_cache:
          key: v2.1-dependencies-{{ checksum "package.json" }}
          paths:
            - ~/.npm
            - ~/.cache
            - /home/circleci/.cache

      # upload sourcemaps!
      - run: COMMIT_HASH=`git rev-parse --short HEAD` && RAZZLE_STAGE=staging-$COMMIT_HASH && yarn sentry_map

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - deploy_container:
          filters:
            branches:
              only:
                - master
                - generate_version_file_for_containers
      - upload_sourcemaps:
          requires:
            - deploy_container
          filters:
            branches:
              only:
                - master
                - generate_version_file_for_containers
